var database = require("database");

//Requires the ui.js file to run
var jsonData2 = [];
var test = true;

//Function to check network status
var netCheck = function(longitude,latitude){
	
var ui = require("ui");
var url = "http://api.wunderground.com/api/035012bdcd3a3f65/conditions/q/"+latitude+","+longitude+".json";
	if (Ti.Network.online) {
	     var getData = Ti.Network.createHTTPClient();
	     getData.onload = function(e){
	          var json = JSON.parse(this.responseText);
	          var forecast = json.current_observation;
	          var city = forecast.display_location.city;
	          var state = forecast.display_location.state_name;
	          var temp = forecast.temp_f;
	          var condition = forecast.weather;
	          var timestamp = function(){
	    	 		var hours = Math.round(new Date().getHours());
	    	 		var min = Math.round(new Date().getMinutes());
		    	 		
		    	 		if(hours>12){
		    	 			var hours = hours-12;
		    	 			var min = min+"pm";
		    	 		}else{
		    	 			var hours = hours;
		    	 			var min = min+"am";
		    	 		};
		    	 		
		    	 		if(min<10){
			    	 		return hours+":"+"0"+min;
			    	 		}else {
			    	 			return hours+":"+min;
			    	 		};
		    	};
		    	
				test = true;
				Ti.App.Properties.setString('timestamp', timestamp());
				database.create(city,state,condition,temp);
				read();
		 }; //getData.onload closing
	     getData.open("GET", url);
	     getData.send();
	} else {
	     alert("Network currently unavailable.");
	     test=false;
	     read();
		}; // if else Ti.Network closing
};
//exports netCheck function to app.js were it can be called.
exports.netCheck = netCheck;

var netCheck2 = function(longitude, latitude){
	var ui = require("ui");
	var url = "http://api.wunderground.com/api/035012bdcd3a3f65/hourly/q/"+latitude+","+longitude+".json";
		if (Ti.Network.online) {
		     var getData = Ti.Network.createHTTPClient();
		     getData.onload = function(e){
		          var json = JSON.parse(this.responseText);
		          jsonData2 = json.hourly_forecast;
		          netCheck(longitude, latitude);
		     }; //getData.onload closing
		     getData.open("GET", url);
		     getData.send();
		} else {
		     alert("Network currently unavailable.");
		     test=false;
		     read();
		}; 
};
//exports netCheck function to app.js were it can be called.
exports.netCheck = netCheck;
exports.netCheck2 = netCheck2;


